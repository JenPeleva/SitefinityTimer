@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel

@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Web.DataResolving;

@Html.Script(ScriptRef.JQuery, "top", false)

<div class="@Model.CssClass">
    

        @foreach (var item in Model.Items)
        {
			var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage);
		
            <article @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)item.Fields.Id)>
                <div class="blog-post-image">
                   <img src='@item.Fields.Image.Fields.MediaUrl' alt='@item.Fields.Image.Fields.AlternativeText' title='@item.Fields.Image.Fields.Title' class="img-responsive" />

                </div>
                <div class="blog-content">
                    <h2 class="blogpost-title">
                        <a @Html.InlineEditingFieldAttributes("Title", "ShortText") href="@navigateUrl">@item.Fields.Title</a>
                    </h2>

                    <div class="blog-meta">
                        @item.GetDateTime("PublicationDate", "MMM d, yyyy, HH:mm tt") /
                        @Html.Resource("By")
                        @DataResolver.Resolve(item.DataItem, "Author", null) /
                              
                               
                        @if(item.Fields.Tags!=null)
                        {

                            foreach (var taxon in item.GetFlatTaxons("Tags").Take(1))
                            {
                                @taxon.Title.ToString()

                            }
                                       
                            foreach (var taxon in item.GetFlatTaxons("Tags").Skip(1))
                            {
                                @(", " + taxon.Title.ToString())
                            }
                                       
                        }

                    </div>

                    <p @Html.InlineEditingFieldAttributes("Summary", "ShortText")>@Html.Raw(item.Fields.Summary)</p>


                    <a href="@navigateUrl" class="btn btn-dafault btn-details">Continue Reading</a>

                </div>

            </article>
        }
    

    @if (Model.ShowPager)
    {
        @Html.Action("Index", "ContentPager", new
           {
               currentPage = Model.CurrentPage,
               totalPagesCount = Model.TotalPagesCount.Value,
               redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
           })
    }
</div>
